name: LLM Perf Benchmarks - CUDA PyTorch Single GPU

on:
  workflow_dispatch:
  push:
    branches:
      - llm-perf*
  schedule:
    # Every day at 00:00 UTC
    - cron: "0 0 * * *"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build_image_and_run_cuda_pytorch_single_gpu_unquantized:
    strategy:
      fail-fast: false
      matrix:
        subset: [unquantized, bnb, awq, gptq]
        machine:
          [
            {
              runs-on: ["single-gpu", "nvidia-gpu", "a10", "ci"],
              name: "1xA10",
            },
          ]

    runs-on: ${{ matrix.machine.runs-on }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build image
        run: docker build
          --build-arg USER_ID=$(id -u)
          --build-arg GROUP_ID=$(id -g)
          --build-arg TORCH_CUDA=cu121
          --build-arg CUDA_VERSION=12.1.1
          --tag llm-perf-cuda:12.1.1
          docker/cuda

      - name: Run benchmarks
        uses: addnab/docker-run-action@v3
        env:
          SUBSET: ${{ matrix.subset }}
          MACHINE: ${{ matrix.machine.name }}
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        with:
          image: llm-perf-cuda:12.1.1
          options: |
            --rm
            --gpus all
            --env SUBSET
            --env MACHINE
            --env HF_TOKEN
            --shm-size 64G
            --env MKL_THREADING_LAYER=GNU
            --env HF_HUB_ENABLE_HF_TRANSFER=1
            --volume ${{ github.workspace }}:/workspace
            --workdir /workspace
          run: |
            pip install packaging && pip install flash-attn einops scipy auto-gptq optimum bitsandbytes autoawq
            pip install -U transformers huggingface_hub[hf_transfer]
            pip install -e .[codecarbon]
            python llm-perf/benchmark_cuda_pytorch.py
