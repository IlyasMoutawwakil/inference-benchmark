name: CLI CUDA Torch-ORT Multi-GPU Tests

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    types: [opened, reopened, synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build_image_and_run_cli_cuda_torch_ort_multi_gpu_tests:
    strategy:
      fail-fast: false
      matrix:
        image:
          [{ torch_cuda: cu118, torch_pre_release: 0, cuda_version: 11.8.0 }]

    runs-on: [multi-gpu, nvidia-gpu, 4-a10, ci]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build image
        run: docker build
          --file docker/cuda.dockerfile
          --build-arg USER_ID=$(id -u)
          --build-arg GROUP_ID=$(id -g)
          --build-arg TORCH_CUDA=${{ matrix.image.torch_cuda }}
          --build-arg CUDA_VERSION=${{ matrix.image.cuda_version }}
          --build-arg TORCH_PRE_RELEASE=${{ matrix.image.torch_pre_release }}
          --cache-from=type=local,src=/mnt/hf_cache/opt_bench_cache/
          --tag opt-bench-cuda:${{ matrix.image.cuda_version }}
          .

      - name: Run tests
        run: docker run
          --rm
          --gpus all
          --shm-size 64G
          --env USE_CUDA="1"
          --env PROCESS_SPECIFIC_VRAM="0"
          --volume $(pwd):/workspace/optimum-benchmark
          --workdir /workspace/optimum-benchmark
          --entrypoint /bin/bash
          opt-bench-cuda:${{ matrix.image.cuda_version }}
          -c "pip install -e .[testing,torch-ort,deepspeed,peft] &&
          pip install transformers==4.38 && python -m torch_ort.configure &&
          pytest -s -v -k 'cli and cuda and torch_ort and (dp or ddp or device_map or deepspeed)' -x"
