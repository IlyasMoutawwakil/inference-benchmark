name: CLI CUDA TensorRT-LLM Tests

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize
      - labeled
      - unlabeled

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}

jobs:
  cli_cuda_tensorrt_llm_single_gpu_tests:
    if: ${{
      (github.event_name == 'push') ||
      (github.event_name == 'workflow_dispatch') ||
      contains( github.event.pull_request.labels.*.name, 'cli') ||
      contains( github.event.pull_request.labels.*.name, 'cuda') ||
      contains( github.event.pull_request.labels.*.name, 'tensorrt_llm') ||
      contains( github.event.pull_request.labels.*.name, 'single_gpu') ||
      contains( github.event.pull_request.labels.*.name, 'cli_cuda_tensorrt_llm')
      }}

    runs-on:
      group: aws-g5-4xlarge-plus

    container:
      image: huggingface/optimum-nvidia:latest
      options: --ipc host --gpus all

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          pip install -e .[testing]

      - name: Run tests
        run: |
          pytest tests/test_cli.py -x -s -k "cli and cuda and tensorrt_llm and not (tp or pp)"

  cli_cuda_tensorrt_llm_multi_gpu_tests:
    if: ${{
      (github.event_name == 'push') ||
      (github.event_name == 'workflow_dispatch') ||
      contains( github.event.pull_request.labels.*.name, 'cli') ||
      contains( github.event.pull_request.labels.*.name, 'examples') ||
      contains( github.event.pull_request.labels.*.name, 'cuda') ||
      contains( github.event.pull_request.labels.*.name, 'tensorrt_llm') ||
      contains( github.event.pull_request.labels.*.name, 'multi_gpu') ||
      contains( github.event.pull_request.labels.*.name, 'cli_cuda_tensorrt_llm_multi_gpu')
      }}

    runs-on:
      group: aws-g5-12xlarge-plus

    container:
      image: huggingface/optimum-nvidia:latest
      options: --ipc host --gpus all

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          pip install -e .[testing]

      # - name: Run cli tests (sequential)
      #   run: |
      #     FORCE_SEQUENTIAL=1 pytest tests/test_cli.py -x -s -k "cli and cuda and tensorrt_llm and (tp or pp)"

      - name: Run tests from example folder
        run: |
          pytest tests/test_examples.py -x -s -k "cuda and tensorrt_llm"
        continue-on-error: true  # Continue even if tests fail or no tests are collected

      - name: Check test result
        if: steps.run_tests.outcome == 'failure' && steps.run_tests.conclusion == 'failure'
        run: |
          if [ "${{ steps.run_tests.outputs.exit_code }}" -eq 5 ]; then
            echo "No tests were collected. Skipping failure..."
            exit 0
          else
            echo "Tests failed for another reason."
            exit 1
          fi